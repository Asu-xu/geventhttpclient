name: Tests

on: [push, pull_request]

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: Windows, python: '3.9', os: windows-latest, tox: py38}
          - {name: Mac, python: '3.9', os: macos-latest, tox: py39}
          - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}
          - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}
          - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}
          - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles('setup.py') }}
      - name: set full Python version in PY env var
        # See https://pre-commit.com/#github-actions-example
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - run: pip install -r requirements-dev.txt
      - run: pip install .
      - run: py.test src/geventhttpclient/tests
  
  release:
    name: Build wheels, upload to PyPI if tagged
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels
        run: pip install cibuildwheel==2.0.0b2 && python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "cp33 cp34"

      - uses: actions/upload-artifact@v2
        if: startsWith(github.event.ref, 'refs/tags')
        with:
          path: ./wheelhouse/*.whl
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
